# Created 2023-08-14 Mon 16:23
#+title: Cash
#+author: Barak-Nadav Diker
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup

* Learn Pandas
Here are some insights on data analysis via the tool pandas


Here is an example on how to open the data
#+begin_src jupyter-python
import pandas as pd
import numpy as np
data = pd.read_excel('TLV22_7_23.xlsx')
#+end_src
** How to access a column

Here is how to access a column in python
#+begin_src jupyter-python
data.iloc[0:3,1]
#+end_src
** Generate dates
Here is how to generate sequence of dates
#+begin_src jupyter-python
dates = pd.date_range("20130101", periods=6)
#+end_src
** How to generate a plot
Here are some snippet that can help me in the future

#+begin_src python
import matplotlib.pyplot as plt
import pandas as pd
#+end_src


Now , what to do ?

#+begin_src python
data = pd.read_excel("TLV22_7_23.xlsx", index_col=0, parse_dates=True)
#+end_src
Somethings that are important to note

The usage of the index_col and parse_dates parameters of the read_csv function to define the first (0th) column as index of the resulting DataFrame and convert the dates in the column to Timestamp objects, respectively.




#+begin_src python
import pandas as pd
import matplotlib.pyplot as plt

air_quality = pd.read_excel("TLV22_7_23.xlsx", index_col=0, parse_dates=True)
air_quality.plot()
plt.show()
#+end_src

if I want to select specific column I should do the following

#+begin_src python

import pandas as pd
import matplotlib.pyplot as plt

air_quality = pd.read_excel("TLV22_7_23.xlsx", index_col=0, parse_dates=True)
air_quality.iloc[:,0:6].plot()
plt.show()
#+end_src
** subplots
note the following code


#+begin_src python

import pandas as pd
import matplotlib.pyplot as plt

air_quality = pd.read_excel("TLV22_7_23.xlsx", index_col=0, parse_dates=True)
axs = air_quality.iloc[:,0:3].plot.area(figsize=(12, 4), subplots=True)
plt.show()
#+end_src
** Series
In This tutorial I'll learn how to use the series

Series is a column in a DataFrame panda data structure

#+begin_src python
import pandas as pd
a = [1, 7, 2]
myvar = pd.Series(a)
print(myvar)
#+end_src

Some more examples on how to create a pandas Series data structure
#+begin_src python
import pandas as pd
a = [1, 7, 2]
myvar = pd.Series(a, index = ["x", "y", "z"])
print(myvar)
#+end_src


#+begin_src python
import pandas as pd
calories = {"day1": 420, "day2": 380, "day3": 390}
myvar = pd.Series(calories)
print(myvar)
#+end_src
** DataFrames
Note that couple of Series data structures create create a single DataFrame

#+begin_src python
import pandas as pd
data = {
  "calories": [420, 380, 390],
  "duration": [50, 40, 45]
}
myvar = pd.DataFrame(data)
print("basic Print")
print(myvar)
print("Print a row")
print(myvar.loc[0])
print("Print a specific columns ")
print(myvar.loc[[0,1]])
#+end_src

important to note
Note: When using [], the result is a Pandas DataFrame.
*** More ideas
If you'll want to index stuff then you could use

#+begin_src python
import pandas as pd
data = {
  "calories": [420, 380, 390],
  "duration": [50, 40, 45]
}
df = pd.DataFrame(data, index = ["day1", "day2", "day3"])
print(df)
print("get a column ")
print(df["calories"])
print("print a row")
print(df.loc["day2"])
#+end_src
*** Another sample
Here is another dataframe pandas data set

#+begin_src python
import pandas as pd
data = {
  "Duration":{
    "0":60,
    "1":60,
    "2":60,
    "3":45,
    "4":45,
    "5":60
  },
  "Pulse":{
    "0":110,
    "1":117,
    "2":103,
    "3":109,
    "4":117,
    "5":102
  },
  "Maxpulse":{
    "0":130,
    "1":145,
    "2":135,
    "3":175,
    "4":148,
    "5":127
  },
  "Calories":{
    "0":409,
    "1":479,
    "2":340,
    "3":282,
    "4":406,
    "5":300
  }
}
df = pd.DataFrame(data)
print(df)
print("get the duration column")
print(df["Duration"])
print("get the 4 row")
print(df.loc["4"]) # note that this is a string !!
#+end_src
* Some Practical example
** first process (Calculate F column)
Here is a practical example where I search for the increment
#+begin_src python
import pandas as pd
data = {
  "Duration":{
    "0":60,
    "1":60,
    "2":60,
    "3":45,
    "4":45,
    "5":60
  }
}
df = pd.DataFrame(data)
#print(df)
#print("get the duration column")
#print(df["Duration"])
#processing
result = [ (y-x)/x for x,y in zip(df["Duration"],df["Duration"][1:])]
print(result)
result2 = [ x for x in df["Duration"][1:]]
print(result2)
#+end_src
** Second process (Calculate G)
In order to use rank.avg in python from excel we'll use .rank() function
#+begin_src python
import pandas as pd
data = {
  "Duration":{
    "0":60,
    "1":60,
    "2":60,
    "3":45,
    "4":45,
    "5":60
  }
}
df = pd.DataFrame(data)
df["avg_rank"] = df["Duration"].rank()
print(df)
#+end_src
